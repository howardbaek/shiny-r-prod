---
title: "Improving Performance by Profiling Your R Code"
subtitle: "posit::conf(2023) <br> Shiny in Production: Tools & Techniques"
author: "Michael Thomas"
footer: "[shinyprod.com](https://shinyprod.com)"
format:
  revealjs:
    # theme: [default, ../slides.scss] # moon= teal bg  |  dark
    scrollable: true
    incremental: true
    slide-number: c/t # c/t | c | h/v | h.v
    slide-tone: false #true
    code-line-numbers: false
    history: false
    #title-slide-attributes:
      #data-background-image: assets/img/bg/vincentiu-solomon-ln5drpv_ImI-unsplash.jpg

---

## What is {profvis}?

R package for visualizing how (and how fast/slow) your R code runs

[{profvis} website](https://rstudio.github.io/profvis/index.html)

![](www/example_profvis_report.png)

::: {.notes}
* The package is from RStudio
:::

## Working with {profvis} & {golem} {auto-animate=true}

Our `dev/run_dev.R` script is where we can profile our app interactively.

We can modify the original code...

```{.r}
options(golem.app.prod = FALSE)

golem::detach_all_attached()

golem::document_and_reload()

run_app()
```

## Working with {profvis} & {golem} {auto-animate=true}

and wrap `run_app()` in `print()`, then `profvis()`...

```{.r}
options(golem.app.prod = FALSE)

golem::detach_all_attached()

golem::document_and_reload()

profvis::profvis({
  print(run_app())
})
```

::: {.notes}
You need to wrap the `run_app()` function in `print()`, before passing it to `profvis::profvis()`
:::
