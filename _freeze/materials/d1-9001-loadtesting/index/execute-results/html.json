{
  "hash": "db2eee8b5c5e329e9e4b24290ae53d19",
  "result": {
    "markdown": "---\ntitle: \"Load Testing\"\nsubtitle: \"posit::conf(2023) <br> Shiny in Production: Tools & Techniques\"\nauthor: \"TBD\"\nfooter: \"[{{< var workshop_short_url >}}]({{< var workshop_full_url >}})\"\nformat: \n  revealjs:\n    theme: [default, ../slides.scss] # moon= teal bg  |  dark\n    scrollable: true\n    incremental: true\n    slide-number: c/t # c/t | c | h/v | h.v\n    slide-tone: false #true\n    code-line-numbers: false\n    history: false\n---\n\n\n## One to Many\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![single-user](assets/img/lego_single_user_computer.png)\n:::\n\n::: {.column width=\"50%\"}\n![crowd](assets/img/lego_crowd.jpg)\n:::\n\n::::\n\n## Optimization Loop Method\n\n![](assets/img/loop.svg)\n\n::: footer\n[rstudio.github.io/shinyloadtest/articles/case-study-scaling.html](https://rstudio.github.io/shinyloadtest/articles/case-study-scaling.html)\n:::\n\n## Double the (Load-Testing) Fun\n\n#### `{shinyloadtest}`\n\n* Record the events of a Shiny application session\n* Process and analyze metrics associated with application runs\n\n#### `shinycannon`\n\n* Command-line utility to launch multiple application sessions and collect event-based metrics\n* Cross-platform (built with Kotlin)\n\n## Hosting Requirements\n\n* Application deployed to a server supporting [SockJS](https://github.com/sockjs/sockjs-client) (Posit Connect, Shiny Server)\n* If authentication required for app on Posit Connect, you'll need an API key\n\n## Recording a Session\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shinyloadtest)\nrecord_session(\"https://my-lego-app.me\", output_file = \"recording.log\")\n```\n:::\n\n\n## Recorder Tips\n\n* Emulate a real-world usage of your application\n* Avoid rapid clicks / selections of your inputs\n\n## The log\n\n```\n# version: 1\n# target_url: https://my-lego-app.me/\n# target_type: RStudio Server Connect\n# rscApiKeyRequired: false\n{\"type\":\"REQ_HOME\",\"begin\":\"2023-09-07T13:03:39.042Z\",\"end\":\"2023-09-07T13:03:40.138Z\",\"status\":200,\"url\":\"/\"}\n{\"type\":\"REQ_GET\",\"begin\":\"2023-09-07T13:03:40.332Z\",\"end\":\"2023-09-07T13:03:40.502Z\",\"status\":200,\"url\":\"/_w_${WORKER}/shiny-sass-1.7.5/shiny-sass.css\"}\n{\"type\":\"REQ_GET\",\"begin\":\"2023-09-07T13:03:40.517Z\",\"end\":\"2023-09-07T13:03:40.678Z\",\"status\":200,\"url\":\"/_w_${WORKER}/bslib-grid-styles-0.5.1/grid.css\"}\n{\"type\":\"REQ_GET\",\"begin\":\"2023-09-07T13:03:40.692Z\",\"end\":\"2023-09-07T13:03:40.886Z\",\"status\":200,\"url\":\"/_w_${WORKER}/bootstrap-5.2.2/bootstrap.min.css\"}\n...\n...\n{\"type\":\"WS_SEND\",\"begin\":\"2023-09-07T13:04:17.805Z\",\"message\":\"[\\\"D#0|m|{\\\\\\\"method\\\\\\\":\\\\\\\"update\\\\\\\",\\\\\\\"data\\\\\\\":{\\\\\\\"n_parts_display\\\\\\\":\\\\\\\"20\\\\\\\"}}\\\"]\"}\n{\"type\":\"WS_CLOSE\",\"begin\":\"2023-09-07T13:04:35.561Z\"}\n```\n\n. . .\n\n![](assets/img/confused_minifig.jpg){.absolute top=50 right=250 width=\"500px\" height=\"500px\"}\n\n## Loading the (shiny) cannon\n\nCommand-line:\n\n```\njava -jar shinycannon-1.1.3-dd43f6b.jar \\\n  recording.log \\\n  https://my-lego-app.me \\\n  --output-dir run1\n```\n\nCustom R function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(file.path(here::here(), \"R\", \"shinycannon.R\"))\n\nshinycannon(\n  \"shinycannon-1.1.3-dd43f6b.jar\",\n  \"recording.log\",\n  \"https://my-lego-app.me\",\n  output_dir = \"R/run1\"\n)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}