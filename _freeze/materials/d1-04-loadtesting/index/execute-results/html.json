{
  "hash": "62fdb7f53e97ff82dedd15c9daf6432c",
  "result": {
    "markdown": "---\ntitle: \"Load Testing\"\nsubtitle: \"posit::conf(2023) <br> Shiny in Production: Tools & Techniques\"\nfooter: \"[{{< var workshop_short_url >}}]({{< var workshop_full_url >}})\"\nformat: \n  revealjs:\n    theme: [default, ../slides.scss] # moon= teal bg  |  dark\n    scrollable: true\n    incremental: false\n    slide-number: c/t # c/t | c | h/v | h.v\n    slide-tone: false #true\n    code-line-numbers: true\n    history: false\nrevealjs-plugins:\n  - codewindow\n---\n\n\n## One to Many\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](assets/img/lego_single_user_computer.png)\n:::\n\n::: {.column width=\"50%\"}\n![](assets/img/lego_crowd.jpg)\n:::\n\n::::\n\n## Optimization Loop Method\n\n![](assets/img/loop.svg)\n\n::: footer\n[rstudio.github.io/shinyloadtest/articles/case-study-scaling.html](https://rstudio.github.io/shinyloadtest/articles/case-study-scaling.html)\n:::\n\n## Double the (Load-Testing) Fun\n\n#### `{shinyloadtest}`\n\n* Record the events of a Shiny application session\n* Process and analyze metrics associated with application runs\n\n#### `shinycannon`\n\n* Command-line utility to launch multiple application sessions and collect event-based metrics\n* Cross-platform (built with Kotlin)\n\n## Hosting Requirements\n\n* Application deployed to a server supporting [SockJS](https://github.com/sockjs/sockjs-client) (Posit Connect, Shiny Server)\n* If authentication required for app on Posit Connect, you'll need an API key\n\n## Recording a Session\n\n::: {.codewindow .r}\nshinyloadtest_recording.R\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shinyloadtest)\nrecord_session(\"https://my-lego-app.me\", output_file = \"recording.log\")\n```\n:::\n\n:::\n\n* Emulate a real-world usage of your application\n* Avoid rapid clicks / selections of your inputs\n\n## The log\n\n::: {.codewindow}\nrecording.log\n```.bash\n# version: 1\n# target_url: https://my-lego-app.me/\n# target_type: RStudio Server Connect\n# rscApiKeyRequired: false\n{\"type\":\"REQ_HOME\",\"begin\":\"2023-09-07T13:03:39.042Z\",\"end\":\"2023-09-07T13:03:40.138Z\",\"status\":200,\"url\":\"/\"}\n{\"type\":\"REQ_GET\",\"begin\":\"2023-09-07T13:03:40.332Z\",\"end\":\"2023-09-07T13:03:40.502Z\",\"status\":200,\"url\":\"/_w_${WORKER}/shiny-sass-1.7.5/shiny-sass.css\"}\n{\"type\":\"REQ_GET\",\"begin\":\"2023-09-07T13:03:40.517Z\",\"end\":\"2023-09-07T13:03:40.678Z\",\"status\":200,\"url\":\"/_w_${WORKER}/bslib-grid-styles-0.5.1/grid.css\"}\n{\"type\":\"REQ_GET\",\"begin\":\"2023-09-07T13:03:40.692Z\",\"end\":\"2023-09-07T13:03:40.886Z\",\"status\":200,\"url\":\"/_w_${WORKER}/bootstrap-5.2.2/bootstrap.min.css\"}\n...\n...\n{\"type\":\"WS_SEND\",\"begin\":\"2023-09-07T13:04:17.805Z\",\"message\":\"[\\\"D#0|m|{\\\\\\\"method\\\\\\\":\\\\\\\"update\\\\\\\",\\\\\\\"data\\\\\\\":{\\\\\\\"n_parts_display\\\\\\\":\\\\\\\"20\\\\\\\"}}\\\"]\"}\n{\"type\":\"WS_CLOSE\",\"begin\":\"2023-09-07T13:04:35.561Z\"}\n```\n:::\n\n. . .\n\n![](assets/img/confused_minifig.jpg){.absolute top=50 right=250 width=\"500px\" height=\"500px\"}\n\n## Loading the (shiny) cannon\n\n::: {.codewindow}\nbash\n\n::: {.cell}\n\n```{.bash .cell-code}\njava -jar shinycannon-1.1.3-dd43f6b.jar \\\n  recording.log \\\n  https://my-lego-app.me \\\n  --loaded-duration-minutes 2 \\\n  --workers 1 \\\n  --output-dir run1\n```\n:::\n\n:::\n\n. . .\n\n::: {.codewindow .r}\nrun_shinycannon.R\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(file.path(here::here(), \"R\", \"shinycannon.R\"))\n\nshinycannon(\n  \"shinycannon-1.1.3-dd43f6b.jar\",\n  \"recording.log\",\n  \"https://rsc.training.posit.co/brickapp-sync/\",\n  loaded_duration_minutes = 2,\n  workers = 1,\n  output_dir = \"run1\"\n)\n```\n:::\n\n:::\n\n## Metrics\n\n\n::: {.cell}\n<style type=\"text/css\">\n.smaller-output{\n  font-size: 80%;\n}\n</style>\n:::\n\n\n::: {.codewindow .r}\nanalyze_recording.R\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shinyloadtest)\ndf <- load_runs(\"Run 1\" = \"run1\")\n```\n:::\n\n:::\n\n\n::: {.smaller-output}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 80 × 13\n   run   user_id session_id iteration input_line_number event start   end   time\n   <ord>   <int>      <int>     <int>             <int> <chr> <dbl> <dbl>  <dbl>\n 1 Run 1       0          0         0                 4 REQ_…   0    24.2 24.2  \n 2 Run 1       0          0         0                 5 REQ_…  24.2  24.5  0.259\n 3 Run 1       0          0         0                 6 REQ_…  24.5  24.6  0.155\n 4 Run 1       0          0         0                 7 REQ_…  24.6  24.9  0.284\n 5 Run 1       0          0         0                 8 REQ_…  24.9  25.3  0.382\n 6 Run 1       0          0         0                 9 REQ_…  25.3  25.5  0.170\n 7 Run 1       0          0         0                10 REQ_…  25.5  25.7  0.242\n 8 Run 1       0          0         0                11 REQ_…  25.7  25.9  0.25 \n 9 Run 1       0          0         0                12 REQ_…  25.9  26.3  0.395\n10 Run 1       0          0         0                13 REQ_…  26.3  26.5  0.198\n# ℹ 70 more rows\n# ℹ 4 more variables: concurrency <dbl>, maintenance <lgl>, label <ord>,\n#   json <list>\n```\n\n\n:::\n:::\n\n:::\n\n## But Wait .. There's More\n\n::: {.codewindow .r}\ngen_report.R\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shinyloadtest)\ndf <- load_runs(\"Run 1\" = \"run1\")\nshinyloadtest_report(df, output = \"report_test.html\")\n```\n:::\n\n:::\n\n![](assets/img/report_screenshot.png)\n\n# Code-Along {background-color=\"#17395c\"}\n\nRecord and analyze load-testing sessions with `shinyCannon` and `{shinyloadtest}`\n\n* Application URL: <https://rsc.training.posit.co/brickapp-sync/>",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}